#user mio;

worker_processes auto;
worker_cpu_affinity auto;

error_log  logs/error.log  error;

events {
    worker_connections  1024;
    accept_mutex off;
}

http {
    server_tokens off;
    charset UTF-8;
    include ./mime.types;

    log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    lua_package_path '$prefix/?.lua;$prefix/resty/thirdparty/lor/?.lua;;';
    lua_code_cache on;

    lua_shared_dict status  8m;
    lua_shared_dict summary 128m;
    lua_shared_dict recording_summary 512m;

    init_worker_by_lua_file gateway/on_worker_init.lua;
    init_by_lua_file gateway/on_init.lua;
    log_by_lua_file gateway/on_log.lua;

    server {
        listen 80;
        access_log off;

        location / {
            content_by_lua_block {
                ngx.say([[hello! this is Mio.]])
            }
        }
    }

    # Mio dashboard server
    server {
        listen       8080;
        #server_name  localhost;
        access_log ./logs/dashboard_access.log main;
        error_log ./logs/dashboard_error.log info;

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location /robots.txt {
            return 200 'User-agent: *\nDisallow: /';
        }

        # 静态文件
        location ~* /mio/static/(.*) {
            alias ./dashboard/static/$1;
        }

        location / {
            set $template_root '';
            content_by_lua_file dashboard/main.lua;
        }
    }

    # Mio api server
    server {
        listen       9090;
        #server_name  localhost;
        access_log ./logs/api_access.log main;
        error_log ./logs/api_error.log info;

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location /robots.txt {
            return 200 'User-agent: *\nDisallow: /';
        }

        location / {
             content_by_lua_file api/main.lua;
        }
    }

}
